{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACZC,KAAMC,SAASC,cAAc,SAC7BC,kBAAmBF,SAASC,cAAc,mBAG3CH,EAAKI,kBAAkBC,iBAAiB,SAExC,SAAkCC,GACjCA,EAAIC,iBAEJ,IAAIC,EAAaR,EAAKC,KAAKQ,SAASC,MAAMC,cACpCC,EAAYZ,EAAKC,KAAKQ,SAASI,KAAKF,cACpCG,EAASd,EAAKC,KAAKQ,SAASK,OAAOH,cACrCI,EAAW,EAEfC,YAAW,WACV,IAAMC,EAAaC,aAAY,WAwBjC,IAAuBC,EAAUT,EAC1BU,GAxBJL,GAAY,KACKD,GACfO,cAAcJ,IAqBIE,EAnBLJ,EAmBeL,EAnBLF,EAoBrBY,EAAgBE,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACxBN,EACHK,EAAQ,CAAEN,WAAUT,UAEpBgB,EAAO,CAAEP,WAAUT,S,KAxBhBiB,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUT,EAAKkB,EAALlB,MAClBZ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANrB,EAAM,MAC1D,CACEsB,QAAS,K,IAGdC,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUT,EAAKkB,EAALlB,MACnBZ,EAAA+B,OAAOK,QAAQ,sBAAqCH,OAAfZ,EAAS,QAAYY,OAANrB,EAAM,MACzD,CACGsB,QAAS,K,IAGZxB,GAAcI,C,GAChBA,E,GACDJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n\tform: document.querySelector('.form'),\n\tcreatePromisesBtn: document.querySelector('.form > button'),\n};\n\nrefs.createPromisesBtn.addEventListener('click', onCreatePromisesBtnClick);\n\nfunction onCreatePromisesBtnClick(evt) {\n\tevt.preventDefault();\n\n\tlet firstDelay = refs.form.elements.delay.valueAsNumber;\n\tconst delayStep = refs.form.elements.step.valueAsNumber;\n\tconst amount = refs.form.elements.amount.valueAsNumber;\n\tlet position = 0;\n\n\tsetTimeout(() => {\n\t\tconst intervalId = setInterval(() => {\n\t\t\tposition += 1;\n\t\t\tif (position === amount) {\n\t\t\t\t\tclearInterval(intervalId);\n\t\t\t\t};\n\t\t\t\tcreatePromise(position, firstDelay)\n\t\t\t\t\t.then(({ position, delay }) => {\n\t\t\t\t\t\tNotify.success(`✅ Fulfilled promise ${position} in ${delay}ms`,\n\t\t\t\t\t\t\t{\n   \t\t\t\t \t\t\ttimeout: 5000,\n  \t\t\t\t\t\t},);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(({ position, delay }) => {\n\t\t\t\t\t\tNotify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n\t\t\t\t\t\t\t{\n    \t\t\t\t\t\ttimeout: 5000,\n  \t\t\t\t\t\t},);\n\t\t\t\t\t});\n\t\t\t\t\t\t\tfirstDelay += delayStep;\n\t\t}, delayStep);\n\t}, firstDelay);\n};\n\n\nfunction createPromise(position, delay) {\n\tconst shouldResolve = Math.random() > 0.3;\n\treturn new Promise((resolve, reject) => {\n\t\tif (shouldResolve) {\n\t\t\tresolve({ position, delay });\n  } else {\n\t\t\treject({ position, delay });\n  }\n\t})\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","createPromisesBtn","addEventListener","evt","preventDefault","firstDelay","elements","delay","valueAsNumber","delayStep","step","amount","position1","setTimeout","intervalId","setInterval","position","shouldResolve","clearInterval","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.80575442.js.map"}